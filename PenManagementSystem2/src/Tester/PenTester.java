package Tester;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import static Validation.PenValidation.*;
import com.core.app.Pen;
import static utils.Penutils.*;

public class PenTester {

	public static void main(String[] args) {
		try(Scanner sc = new Scanner(System.in))
		{
		  Map<Integer,Pen> pensMap = new HashMap <Integer,Pen>();
		  pensMap=populatedList(pensMap);
		  boolean Flag = false;
		  while(!Flag)
			  try{
				  System.out.println("MENU : 1.add pen\n2.update stock\n3.Set discount of 20% for all the pens which are not at all sold in last 3 months\n5.Display Pen Inventory ");
				  System.out.println("enter your choice ");
				  switch(sc.nextInt())
				  {
				  case 1:
					  System.out.println("Enter Pen id");
					  int validatedPenID= checkforPenDups(sc.nextInt(),pensMap);
					  System.out.println("Enter the details of  Pen resp : brand (CELLO,PARKER,REYNOLDS), String color, inkColor, pMate(PLASTIC,ALLOYSTEEL,METAL),  stock,\r\n"
					  		+ "		 stockListingDate(YYYY-MM-DD), discount");
					  Pen validatedPen =  validateALL( validatedPenID,sc.next(),sc.next(),sc.next(),sc.next(),sc.nextInt(),sc.next(),sc.nextInt(),pensMap);
					  pensMap.put(validatedPenID, validatedPen);
					  System.out.println("Pen added successfully in the inventory");
					  break;
					  
				  case 2:
					  System.out.println("Enter date for stock update");
					  String stockUpdateDate = sc.next();
					  System.out.println("Enter Pen id and stock to be updated ");
					  changeStock(sc.nextInt(),pensMap,sc.nextInt(),stockUpdateDate);
					  break;
				  case 3:
					  for(Pen p : pensMap.values())
					  {
						  changePrice(p.getStockUpdateDate(),p.getDiscount(),p);
					  }
				  
					 
				  case 5:
					  
//					  System.out.println("Pen details in inventory as below");
//					  for(Pen p : pensMap.values())
//					  {
//						  System.out.println(p);
//					  }
//					  break;
					 
					  
				  }
				  
			  }catch(Exception e)
		  {
				  e.printStackTrace();
				  sc.nextLine();
				  
				  
		  }
		}

	}

}
